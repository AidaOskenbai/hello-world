1. Дан массив размера N и целые числа K и L (1 ≤ K ≤ L ≤ N). Найти среднее арифметическое элементов массива с номерами от K до L включительно.

n = int(input())
a = [0]*n
k = int(input())
l = int(input())
s = 0

for i in range(n):
    a[i] = int(input())

for i in range(k-1, l):
    s = s + a[i]
    
print(s/((l+1)-k))


2. Дан целочисленный массив размера N, не содержащий одинаковых чисел. Проверить, образуют ли его элементы арифметическую прогрессию. Если образуют, то вывести разность прогрессии, если нет — вывести 0.

def progression_detector(massive, x):
    for i in range(2, len(massive)):
        if massive[i]-massive[i-1] != x:
            return 0
    return x
    
n = int(input())
a = [0]*n

for i in range(n):
    a[i] = int(input())

k = a[1] - a[0]
        
print(progression_detector(a, k))


3. Дан массив A размера N. Найти минимальный элемент из его элементов с четными номерами: A2, A4, A6,

n = int(input())
a = [0]*n
k = 100000000000000

for i in range(n):
    a[i] = int(input())
    
for i in range(1, n, 2):
    k = min(a[i], k)
        
print(k)


4. Дан массив размера N. Найти номер его последнего локального максимума (локальный максимум — это элемент, который больше любого из своих соседей).

n = int(input())
a = [0]*n
k = -100000000000

for i in range(n) :
    a[i] = int(input())
    
for i in range(1, n-1) :
    if max(a[i], a[i-1], a[i+1]) == a[i] :
        k = a[i]
        
print(k)


5. Дан целочисленный массив размера N, содержащий ровно два одинаковых элемента. Найти номера одинаковых элементов и вывести эти номера в порядке возрастания

n = int(input())
a = [0]*n

for i in range(n):
    a[i] = int(input())
    
for i in range(n):
    for j in range(i+1, n):
        if a[j] == a[i]:
print (i+1, j+1)

