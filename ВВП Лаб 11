1. Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).

a = int(input())
b = int(input())
for i in range (a, b + 1):
    for j in range (i):
        print (i)
        
        
2. Даны положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Не используя операции умножения и деления, найти длину незанятой части отрезка A.

a = int(input())
b = int(input())
n = b 

while n < a - b:
    n = n + b 
print (a - n)


3. Дано целое число N (> 1). Вывести наименьшее из целых чисел K, для которых сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.

n = int(input())
k = 0
s = 0
while s < n:
    k = k + 1
    s = s + k
print (k - 1)
print (s - k)


4. Начальный вклад в банке равен 1000 руб. Через каждый месяц размер вклада увеличивается на P процентов от имеющейся суммы (P — вещественное число, 0 < P < 25). По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число).

p = int(input())
k = 0
s = 1000
while s < 1100:
    k = k + 1
    s = s + p*s/100
    
print (k)
print (round(s, 2))


5. Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида

a = int(input())
b = int(input())
 
while a != 0 and b != 0:
    if a > b:
        a = a % b
    else:
        b = b % a
 
print(a + b)


6. Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK. Найти целое число K — порядковый номер числа Фибоначчи N.

n = int(input())
a = 1 
b = 1 
s = 0
k = 0

while s != n :
    s = a + b
    a = b 
    b = s 
    k = k + 1
    
print (s)
print (k + 2)


